<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>High Availability - Tag - Xieydd&#39;s Blog</title>
        <link>https://blog.xieydd.top/en/tags/high-availability/</link>
        <description>High Availability - Tag - Xieydd&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>xieydd@gmail.com (xieydd)</managingEditor>
            <webMaster>xieydd@gmail.com (xieydd)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 26 Jul 2024 12:40:32 &#43;0800</lastBuildDate><atom:link href="https://blog.xieydd.top/en/tags/high-availability/" rel="self" type="application/rss+xml" /><item>
    <title>PostgreSQL High Availability</title>
    <link>https://blog.xieydd.top/en/postgres-ha/</link>
    <pubDate>Fri, 26 Jul 2024 12:40:32 &#43;0800</pubDate>
    <author>xieydd</author>
    <guid>https://blog.xieydd.top/en/postgres-ha/</guid>
    <description><![CDATA[I've been researching PostgreSQL high availability solutions recently, and here's what I've learned.
PostgreSQL High Availability High Availability Goals PostgreSQL high availability typically has two main objectives:
 RPO (Recovery Point Objective): The maximum acceptable amount of data loss measured in time. This represents how much data loss a business can tolerate. RTO (Recovery Time Objective): The maximum acceptable downtime, measured from when a disaster occurs until the system is operational again.]]></description>
</item>
</channel>
</rss>
